openapi: 3.0.0
info:
  title: Recustomer Integration API
  description: |-
    Recustomer API for Return and Cancel v2
    # Introduction
    Integration APIは、Recustomerを利用するために必要な各種データを連携するためのAPIです。
    ### Module1: Order importer
    マーチャントで注文が作成または更新された際に、Recustomerに注文情報を送信する必要があります。
    ### Module2: Exchange
    商品の在庫情報をReucustomerに提供します。また、Recustomer上で作成された注文情報をマーチャントに送信します。
    ### Module3: Cancel
    Recustomerでキャンセルされた注文情報をマーチャントに送信します。
    # Authentication
    Recustomerからトークンとアクセスキーを提供します。それらのパラメータをAPIのheaderに含めて送信します。
    <table>
      <tr>
        <td>
          キー名
        </td>
        <td>
          概要
        </td>
      </tr>
      <tr>
        <td>
          api_store_key
        </td>
        <td>
          マーチャントを識別するためのキー情報です。
        </td>
      </tr>
      <tr>
        <td>
          api_token
        </td>
        <td>
          送信されたリクエストの認証に使うランダムな文字列です。
        </td>
      </tr>
    </table>
  version: 1.0.0
  # x-logo:
  #   url: notion://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8ca291eb-759d-481b-bfbf-84aaa2bdd17d%2Flogo.png?id=0e6b1637-ed44-4e39-92a4-d4d5761b4c6e&table=block&spaceId=ee6cace2-9eea-4a9c-81f3-1a646693f604&width=2000&userId=b3b4ab11-cac2-4a93-97c3-7a0e7ea25879&cache=v2

paths:
  /orders/import:
    post:
      tags:
        - "module1: Order importer"
      summary: order importer
      description: 注文情報をRecustomerに送信します
      parameters:
        - $ref: "#/components/parameters/StoreKey"
        - $ref: "#/components/parameters/Token"
      requestBody:
        $ref: "#/components/requestBodies/OrderImporter"

      responses:
        "201":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequestSuccessResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest401Response"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest422Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest500Response"

  /products/{product_id}:
    get:
      tags:
        - "module2: Exchange"
      summary: get products variants
      description: 商品情報を取得します
      parameters:
        - $ref: "#/components/parameters/ProductId"
        - $ref: "#/components/parameters/Token"
      responses:
        "200":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
  /orders:
    post:
      tags:
        - "module2: Exchange"
      summary: post order
      description: 注文情報を作成します
      parameters:
        - $ref: "#/components/parameters/Token"
      requestBody:
        $ref: "#/components/requestBodies/Order"
      responses:
        "201":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequestSuccessResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest401Response"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest422Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest500Response"
  /orders/cancel:
    post:
      tags:
        - "module3: Cancel"
      summary: cancel order
      description: 注文情報をキャンセルします
      parameters:
        - $ref: "#/components/parameters/Token"
      requestBody:
        $ref: "#/components/requestBodies/OrderCancel"
      responses:
        "201":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequestSuccessResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest400Response"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest401Response"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest422Response"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest500Response"

components:
  parameters:
    OrderIds:
      name: ids
      in: query
      description: 注文idを指定する。複数指定する際にはカンマ区切りで送信する
      schema:
        type: integer
        format: int64
      example: 1,2,3
    OrderId:
      name: order_id
      in: path
      description: 指定の注文ID
      required: true
      schema:
        type: integer
        format: int64
    OrderNumber:
      name: order_number
      in: query
      schema:
        type: string
    ProductIds:
      name: ids
      in: query
      description: 商品idを指定する。複数指定する際にはカンマ区切りで送信する
      schema:
        type: integer
        format: int64
    ProductId:
      name: product_id
      in: path
      description: 指定の商品ID
      required: true
      schema:
        type: string
    Token:
      name: api_token
      in: header
      required: true
      description: 認証用トークン(Recustomerから提供します)
      schema:
        type: string
      example: "X12345678"
    StoreKey:
      name: api_store_key
      in: header
      required: true
      description: ストアKey(Recustomerから提供します)
      schema:
        type: string
      example: "test-store"

  requestBodies:
    Order:
      content:
        application/json:
          schema:
            type: object
            required:
              - line_items
              - total_amount
              - product_amount
              - discount_amount
              - tax_amount
              - currency
              - shipping_address
            properties:
              total_amount:
                type: number
                example: 990
                description: 合計金額
              total_product_amount:
                type: number
                example: 1000
                description: 商品金額の合計
              total_discount_amount:
                type: number
                example: 100
                description: 割引金額の合計
              total_tax_amount:
                type: number
                example: 90
                description: 税の合計金額
              pre_discount_amount:
                type: string
                example: 1100
                description: 割引前商品価格(税込)の合計
              is_tax_included:
                type: boolean
                example: true
                description: total_amountが税を含む金額か
              currency:
                type: string
                example: "JPY"
                description: 通過単位
              line_items:
                type: array
                items:
                  $ref: "#/components/schemas/OrderLineItem"
                description: 注文商品
              shipping_address:
                $ref: "#/components/schemas/ShippingAddress"
                description: 発送先住所
    OrderImporter:
      content:
        application/json:
          schema:
            type: object
            required:
              - id
              - order_number
              - status
              - total_amount
              - total_product_amount
              - total_discount_amount
              - total_tax_amount
              - currency
              - customer
              - line_items
              - shipping_address
              - fulfillments
              - transactions
              - created_at
            properties:
              id:
                type: string
                example: 1234567
                description: 本注文を特定できるユニークな注文ID
              order_number:
                type: string
                example: 1001
                description: 注文番号
              status:
                type: string
                # TODO: ステータスの内容は検討
                enum:
                  [
                    "processing",
                    "returned",
                    "refunded",
                    "shipped",
                    "partional_returned",
                    "partional_refunded",
                    "partional_shipped",
                    "canceled",
                    "partional_canceled",
                  ]
                description: "注文ステータス processing: 処理中、returned: 返品済み、refunded: 返金済み、shipped: 発送済み、partional_returned: 一部返品済み、partional_refunded: 一部返金済み、partional_shipped: 一部発送済み、canceled: 一部キャンセル済み、"
                example: "processing"
              total_amount:
                type: number
                example: 990
                description: 合計金額
              total_product_amount:
                type: number
                example: 1000
                description: 商品金額の合計
              total_discount_amount:
                type: number
                example: 100
                description: 割引金額の合計
              total_tax_amount:
                type: number
                example: 90
                description: 税の合計金額
              pre_discount_amount:
                type: string
                example: 1100
                description: 割引前商品価格(税込)の合計
              is_tax_included:
                type: boolean
                example: true
                description: total_amountが税を含む金額か
              currency:
                type: string
                example: "JPY"
                description: 通過単位
              quantity:
                type: integer
                example: 3
                description: 注文商品数の合計
              created_at:
                $ref: "#/components/schemas/Created_at"
              updated_at:
                $ref: "#/components/schemas/Updated_at"
              order_tags:
                type: array
                items:
                  type: string
                  example: ["テスト注文"]
                description: 注文タグ
              note:
                type: string
                example: "テスト注文"
                description: 注文の補足情報

              customer:
                $ref: "#/components/schemas/Customer"
                description: 顧客情報
              line_items:
                type: array
                items:
                  $ref: "#/components/schemas/OrderLineItem"
                description: 注文商品
              shipping_address:
                $ref: "#/components/schemas/ShippingAddress"
                description: 発送先住所
              fulfillments:
                type: array
                items:
                  $ref: "#/components/schemas/OrderFulfillment"
                description: 発送情報
              transactions:
                type: array
                items:
                  $ref: "#/components/schemas/OrderTransaction"
                description: 金額情報
              custom_properties:
                type: object
                description: 独自で設定したいカラム情報
    OrderCancel:
      content:
        application/json:
          schema:
            type: object
            required:
              - order_id
            properties:
              order_id:
                type: string
                example: 12345
                description: キャンセルする注文ID
  schemas:
    HasNext:
      type: boolean
      description: 他データが存在するかどうか
    NextPageToken:
      type: string
      description: 次データのハッシュ値 次データが存在しない場合にはnullとする
      nullable: true
    Orders:
      type: array
      items:
        $ref: "#/components/schemas/Order"
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        created_at:
          type: string
          example: "2023-05-10T12:00:00+09:00"
        order_number:
          type: string
        status:
          type: string
          # TODO: ステータスの内容は検討
          enum:
            [
              "processing",
              "returned",
              "refunded",
              "shipped",
              "partional_returned",
              "partional_refunded",
              "partional_shipped",
              "canceled",
              "partional_canceled",
            ]
          description: "processing: 処理中、returned: 返品済み、refunded: 返金済み、shipped: 発送済み、partional_returned: 一部返品済み、partional_refunded: 一部返金済み、partional_shipped: 一部発送済み、canceled: 一部キャンセル済み、"
        total_amount:
          type: number
        total_product_amount:
          type: number
        total_discount_amount:
          type: number
        total_tax_amount:
          type: number
        pre_discount_amount:
          type: string
          example: 1100
          description: 割引前商品価格(税込)の合計
        is_tax_included:
          type: boolean
          example: true
          description: total_amountが税を含む金額か
        line_items:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItem"
        shipping_address:
          $ref: "#/components/schemas/ShippingAddress"
        # billing_address:
        #   $ref: "#/components/schemas/BillingAddress"
    OrderLineItem:
      type: object
      required:
        - id
        - quantity
        - product_id
        - sku
        - total_amount
        - product_amount
        - discount_amount
        - tax_amount
        - fulfillment_status
      properties:
        id:
          type: integer
          example: 1000
          description: ラインアイテムID
        product_id:
          type: string
          example: "product_id"
          description: 商品ID
        product_name:
          type: string
          example: "テスト商品"
          description: 商品名
        variant_id:
          type: string
          example: "2538974832789"
          description: バリエーションID
        sku:
          type: string
          example: "product_id_S_Red"
          description: SKU
        item_image:
          type: string
          example: "https://recustomer.me/image/12345"
          description: 商品画像
        total_amount:
          type: string
          example: 990
          description: 合計金額
        product_amount:
          type: number
          example: 1000
          description: 商品の金額の合計
        discount_amount:
          type: number
          example: 100
          description: 割引額の合計
        tax_amount:
          type: number
          example: 90
          description: 税の合計
        pre_discount_amount:
          type: string
          example: 1100
          description: 割引前商品価格(税込)の合計
        is_tax_included:
          type: boolean
          example: true
          description: total_amountが税を含む金額か
        quantity:
          type: number
          example: 1
          description: 商品数量
        fulfillment_status:
          type: string
          enum: ["null", "fulfilled", "partial", "not_eligible"]
          description: "発送状況 null: 未発送、fulfilled: 発送済み, partial: 一部発送済み, not_eligible: 発送対象外"
        variant_options:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItemOption"
          description: バリエーションのオプション
        product_tags:
          type: array
          items:
            type: string
            example: ["test", "sample"]
          description: 商品タグ
        product_collections:
          type: array
          items:
            type: string
            example: ["食品", "テストコレクション"]
          description: 商品コレクション
        product_supplier:
          type: string
          example: "テスト店舗"
          description: 販売元

    OrderLineItemOption:
      type: object
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: "オプション名"
          example: "カラー"
        value:
          type: string
          description: "オプションに設定されている値"
          example: "レッド"
      description: "商品に設定されているオプション"

    Address:
      type: object
      required:
        - country
        - postal_code
        - province
        - city
        - street1
      properties:
        country_code:
          type: string
          example: "JP"
          description: 国コード 日本の場合"JP" ISO-3166-2参照
        postal_code:
          type: string
          example: "1010024"
        province:
          type: string
          example: "東京都"
        city:
          type: string
          example: "千代田区"
        street1:
          type: string
          example: "神田和泉町1-8-11"
        street2:
          type: string
          example: "サン・センタービル5F"
    ShippingAddress:
      type: object
      required:
        - full_name
        - address
      properties:
        first_name:
          type: string
          example: "太郎"
          description: 名
        last_name:
          type: string
          example: "佐藤"
          description: 姓
        full_name:
          type: string
          example: "佐藤 太郎"
          description: 姓名
        email:
          type: string
          example: "test@recustomer.co"
          description: メールアドレス
        phone_number:
          type: string
          example: "000-####-####"
          description: 電話番号
        address:
          $ref: "#/components/schemas/Address"
          description: 住所情報
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    Product:
      type: object
      required:
        - product_id
        - product_name
        - variants
      properties:
        product_id:
          type: string
          example: "product_id"
          description: 商品ID
        product_name:
          type: string
          example: "テスト商品"
          description: 商品名
        image_url:
          type: string
          example: "https://recustomer.me/image/12345"
          description: 商品画像のリンク
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"
        variants:
          type: array
          items:
            $ref: "#/components/schemas/Variant"
    Variants:
      type: array
      items:
        $ref: "#/components/schemas/Variant"
    Variant:
      type: object
      required:
        - quantity_in_stock
        - name
        - sku
      properties:
        variant_id:
          type: string
          example: "2538974832789"
          description: バリエーションID
        sku:
          type: string
          example: test-product
          description: SKU
        image_url:
          type: string
          example: "https://recustomer.me/image/12345"
          description: 商品画像
        name:
          type: string
          example: "テスト商品"
          description: 商品名
        quantity_in_stock:
          type: integer
          format: int64
          description: "利用可能な在庫数"
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"
        options:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItemOption"
          description: 設定されているオプション情報
    Customer:
      type: object
      required:
        - email
        - full_name
      properties:
        email:
          type: string
          example: "test@recustomer.co"
          description: メールアドレス
        last_name:
          type: string
          nullable: true
          example: "佐藤"
          description: 姓
        first_name:
          type: string
          nullable: true
          example: "太郎"
          description: 名
        full_name:
          type: string
          example: "佐藤 太郎"
          description: 姓名
        phone_number:
          type: string
          example: "000-####-####"
          description: 電話番号
        is_consent_email_marketing:
          type: boolean
          example: false
          description: emailマーケティングに同意しているか
        is_consent_sms_marketing:
          type: boolean
          example: false
          description: SMSマーケティングに同意しているか
        purchase_times:
          type: integer
          example: 11
          description: 購入回数
        customer_tags:
          type: array
          items:
            type: string
            example: ["test顧客", "一般会員"]
          description: 顧客タグ
    Created_at:
      type: string
      example: "2023-05-10T12:00:00+09:00"
      description: 作成日時
    Updated_at:
      type: string
      example: "2023-05-12T10:30:00+09:00"
      description: 更新日時
    OrderFulfillment:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: 発送情報ID
        status:
          type: string
          enum: ["pending", "open", "success", "cancelled", "failure"]
          description: "発送状況 pending: 保留中、open: 処理中、success: 処理成功、cancelled: キャンセル、failure: 処理失敗"
        tracking_company:
          type: string
          example: 佐川急便
          description: 配送会社
        tracking_number:
          type: array
          items:
            type: string
            example: ["4983892", "7348974"]
          description: 配送番号
        fulfillment_line_items:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentLineItems"
          description: 発送商品
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"
    FulfillmentLineItems:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: 発送商品ID
        order_line_item_id:
          type: integer
          example: 1
          description: 発送された商品のline_item_id
        quantity:
          type: integer
          example: 2
          description: 配送済みの商品数
    OrderTransaction:
      type: object
      required:
        - id
        - amount
        - currency
        - status
        - gateway
      properties:
        id:
          type: integer
          example: 2
          description: トランザクションID
        parent_id:
          type: integer
          example: 1
          description: 紐づく親トランザクションID
        amount:
          type: string
          example: 1000
          description: 取引金額
        currency:
          type: string
          example: "JPY"
          description: 通過単位
        status:
          type: string
          enum: ["success", "failure", "pending"]
          description: "取引ステータス success: 成功、failure: 失敗、pending: 保留"
        # type:
        #   type: string
        gateway:
          type: string
          description: 取引ゲートウェイ
          example: manual
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"

    PostRequestSuccessResponse:
      type: object
      properties:
        results:
          type: string
          example: "success"
    PostRequest400Response:
      type: object
      properties:
        message:
          type: string
          example: "Bad Request"
          description: "エラー詳細が格納されます"
    PostRequest401Response:
      type: object
      properties:
        message:
          type: string
          example: "Unauthorized"
          description: "エラー詳細が格納されます"
    PostRequest422Response:
      type: object
      properties:
        message:
          type: string
          example: "Unprocessable Entity"
          description: "エラー詳細が格納されます"
    PostRequest500Response:
      type: object
      properties:
        message:
          type: string
          example: "Internal Server Error"
          description: "エラー詳細が格納されます(Recustomerにエラーが発生している可能性がございます。お手数ですがお問合せください)"
