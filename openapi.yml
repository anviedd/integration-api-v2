openapi: 3.0.0
info:
  title: Recustomer Integration API
  description: |-
    Recustomer API for Return and Cancel v211
    # Introduction
    Introduction
    # Authentication
    Authentication
  version: 1.0.0

paths:
  /orders:
    get:
      tags:
        - "Order"
      summary: get orders
      description: 注文情報を複数件取得します
      parameters:
        - $ref: "#/components/parameters/OrderIds"
        - $ref: "#/components/parameters/OrderNumber"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/PageToken"
      responses:
        "200":
          description: successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    $ref: "#/components/schemas/Orders"
                  naxt_page_token:
                    $ref: "#/components/schemas/NextPageToken"
    post:
      tags:
        - "Order"
      summary: post order
      description: 注文情報を作成します
      requestBody:
        $ref: "#/components/requestBodies/Order"
      responses:
        "201":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"

  /orders/{order_id}:
    get:
      tags:
        - "Order"
      summary: get one order
      description: 指定IDの注文情報を1件取得します
      parameters:
        - $ref: "#/components/parameters/OrderId"
      responses:
        "200":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "404":
          description: Order not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /products:
    get:
      tags:
        - "Product"
      summary: get products
      description: 商品情報を複数件取得します
      parameters:
        - $ref: "#/components/parameters/ProductIds"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/PageToken"
      responses:
        "200":
          description: successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    $ref: "#/components/schemas/Products"
                  naxt_page_token:
                    $ref: "#/components/schemas/NextPageToken"

  /products/{product_id}:
    get:
      tags:
        - "Product"
      summary: get one product
      description: 商品情報を1件取得します
      parameters:
        - $ref: "#/components/parameters/ProductId"
      responses:
        "200":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
  /products/{product_id}/variants:
    get:
      tags:
        - "Product"
      summary: get variantion product
      description: 指定商品のバリエーションを取得します
      parameters:
        - $ref: "#/components/parameters/ProductId"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/PageToken"
      responses:
        "200":
          description: successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    $ref: "#/components/schemas/Variants"
                  naxt_page_token:
                    $ref: "#/components/schemas/NextPageToken"
  /products/{product_id}/variants/{sku}:
    get:
      tags:
        - "Product"
      summary: get variantion product
      description: 指定商品のバリエーションを取得します
      parameters:
        - $ref: "#/components/parameters/ProductId"
        - $ref: "#/components/parameters/SKU_path"
      responses:
        "200":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Variant"
  # /products/{product_id}/adjust_inventory:
  #   post:
  #     tags:
  #       - "Product"
  #     summary: adjust inventory of one proruct
  #     description: 指定商品の在庫を調整します

components:
  parameters:
    OrderIds:
      name: ids
      in: query
      description: 注文idを指定する。複数指定する際にはカンマ区切りで送信する
      schema:
        type: integer
        format: int64
      example: 1,2,3
    OrderId:
      name: order_id
      in: path
      description: 指定の注文ID
      required: true
      schema:
        type: integer
        format: int64
    OrderNumber:
      name: order_number
      in: query
      schema:
        type: string
    ProductIds:
      name: ids
      in: query
      description: 商品idを指定する。複数指定する際にはカンマ区切りで送信する
      schema:
        type: integer
        format: int64
    ProductId:
      name: product_id
      in: path
      description: 指定の商品ID
      required: true
      schema:
        type: string
    SKU_path:
      name: sku
      in: path
      description: SKU
      required: true
      schema:
        type: string
    Limit:
      name: limit
      in: query
      required: false
      description: 最大取得件数。未指定の場合、デフォルトで50件
      schema:
        type: integer
        default: 50
    PageToken:
      name: page_token
      in: query
      required: false
      description: 取得データの初期位置に関するトークン
      schema:
        type: string

  requestBodies:
    Order:
      content:
        application/json:
          schema:
            type: object
            required:
              - name
              - total_amount
            properties:
              total_amount:
                type: number
              currency:
                type: string
                example: "JPY"
              line_items:
                type: array
                items:
                  $ref: "#/components/schemas/OrderLineItem"
              shipping_address:
                $ref: "#/components/schemas/ShippingAddress"
              billing_address:
                $ref: "#/components/schemas/BillingAddress"
  schemas:
    HasNext:
      type: boolean
      description: 他データが存在するかどうか
    NextPageToken:
      type: string
      description: 次データのハッシュ値 次データが存在しない場合にはnullとする
      nullable: true
    Orders:
      type: array
      items:
        $ref: "#/components/schemas/Order"
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        created_at:
          type: string
          example: "2023-05-10T12:00:00+09:00"
        order_number:
          type: string
        status:
          type: string
          # TODO: ステータスの内容は検討
          enum:
            [
              "processing",
              "returned",
              "refunded",
              "shipped",
              "partional_returned",
              "partional_refunded",
              "partional_shipped",
              "canceled",
              "partional_canceled",
            ]
          description: "processing: 処理中、returned: 返品済み、refunded: 返金済み、shipped: 発送済み、partional_returned: 一部返品済み、partional_refunded: 一部返金済み、partional_shipped: 一部発送済み、canceled: 一部キャンセル済み、"
        total_amount:
          type: number
        total_product_amount:
          type: number
        total_discount_amount:
          type: number
        total_tax_amount:
          type: number
        line_items:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItem"
        shipping_address:
          $ref: "#/components/schemas/ShippingAddress"
        billing_address:
          $ref: "#/components/schemas/BillingAddress"
    OrderLineItem:
      type: object
      properties:
        product_id:
          type: string
        sku:
          type: string
        item_image:
          type: string
        total_amount:
          type: number
        product_amount:
          type: number
        discount_amount:
          type: number
        tax_amount:
          type: number
        query:
          type: number
        fulfillment_status:
          type: string
          enum: ["null", "fulfilled", "partial", "not_eligible"]
          description: "null: 未発送、fulfilled: 発送済み, partial: 一部発送済み, not_eligible: 発送対象外"
        variant_options:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItemOption"
    OrderLineItemOption:
      type: object
      properties:
        name:
          type: string
          description: "オプション名"
          example: "カラー"
        value:
          type: string
          description: "オプションに設定されている値"
          example: "レッド"
      description: "商品に設定されているオプション"

    Address:
      type: object
      properties:
        country:
          type: string
        postal_code:
          type: string
        province:
          type: string
        city:
          type: string
        street1:
          type: string
        street2:
          type: string
    ShippingAddress:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        full_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        address:
          $ref: "#/components/schemas/Address"
    BillingAddress:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        full_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        address:
          $ref: "#/components/schemas/Address"
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    Product:
      type: object
      properties:
        product_id:
          type: string
          format: int64
          example: 1
        created_at:
          type: string
          example: "2023-05-10T12:00:00+09:00"
        sku:
          type: string
          example: test-product
        image_src:
          type: string
        name:
          type: string
          example: "テスト商品"
        inventory_quantity:
          type: integer
          format: int64
          description: "利用可能な在庫数"
        variants:
          type: array
          items:
            $ref: "#/components/schemas/Variant"
    Variants:
      type: array
      items:
        $ref: "#/components/schemas/Variant"
    Variant:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        created_at:
          type: string
          example: "2023-05-10T12:00:00+09:00"
        sku:
          type: string
          example: test-product
        image_url:
          type: string
        name:
          type: string
          example: "テスト商品"
        quantity_stock:
          type: integer
          format: int64
          description: "利用可能な在庫数"
    Customer:
      type: object
      properties:
        email:
          type: string
        last_name:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
        full_name:
          type: string
