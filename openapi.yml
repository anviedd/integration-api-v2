openapi: 3.0.0
info:
  title: Recustomer Integration API
  description: |-
    Recustomer API for Return and Cancel v211
    # Introduction
    Introduction memo
    更新履歴をNotionで記録して公開するようにする(開発中の変更が予想されるため)
    # Authentication
    Authentication memo
    認証方法を入れる(現時点でBasic認証・Token認証・OAuthを設定する予定(Returnly参考))
  version: 1.0.0
  # x-logo:
  #   url: notion://www.notion.so/image/https%3A%2F%2Fs3-us-west-2.amazonaws.com%2Fsecure.notion-static.com%2F8ca291eb-759d-481b-bfbf-84aaa2bdd17d%2Flogo.png?id=0e6b1637-ed44-4e39-92a4-d4d5761b4c6e&table=block&spaceId=ee6cace2-9eea-4a9c-81f3-1a646693f604&width=2000&userId=b3b4ab11-cac2-4a93-97c3-7a0e7ea25879&cache=v2

paths:
  /orders/import:
    post:
      tags:
        - "module1: Order importer"
      summary: post order
      description: 注文情報を作成します
      requestBody:
        $ref: "#/components/requestBodies/OrderImporter"
      responses:
        "201":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequestSuccessResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest400Response"
        "401":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest401Response"
        "422":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest422Response"
        "500":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest500Response"

  /products/{product_id}:
    get:
      tags:
        - "module2: Exchange"
      summary: get products
      description: 商品情報を複数件取得します
      parameters:
        - $ref: "#/components/parameters/ProductId"
      responses:
        "200":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
  /orders:
    post:
      tags:
        - "module2: Exchange"
      summary: post order
      description: 注文情報を作成します
      requestBody:
        $ref: "#/components/requestBodies/Order"
      responses:
        "201":
          description: successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequestSuccessResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest400Response"
        "401":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest401Response"
        "422":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest422Response"
        "500":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PostRequest500Response"

components:
  parameters:
    OrderIds:
      name: ids
      in: query
      description: 注文idを指定する。複数指定する際にはカンマ区切りで送信する
      schema:
        type: integer
        format: int64
      example: 1,2,3
    OrderId:
      name: order_id
      in: path
      description: 指定の注文ID
      required: true
      schema:
        type: integer
        format: int64
    OrderNumber:
      name: order_number
      in: query
      schema:
        type: string
    ProductIds:
      name: ids
      in: query
      description: 商品idを指定する。複数指定する際にはカンマ区切りで送信する
      schema:
        type: integer
        format: int64
    ProductId:
      name: product_id
      in: path
      description: 指定の商品ID
      required: true
      schema:
        type: string
    SKU_path:
      name: sku
      in: path
      description: SKU
      required: true
      schema:
        type: string
    Limit:
      name: limit
      in: query
      required: false
      description: 最大取得件数。未指定の場合、デフォルトで50件
      schema:
        type: integer
        default: 50
    PageToken:
      name: page_token
      in: query
      required: false
      description: 取得データの初期位置に関するトークン
      schema:
        type: string

  requestBodies:
    Order:
      content:
        application/json:
          schema:
            type: object
            required:
              - name
            properties:
              total_amount:
                type: number
              currency:
                type: string
                example: "JPY"
              line_items:
                type: array
                items:
                  $ref: "#/components/schemas/OrderLineItem"
              shipping_address:
                $ref: "#/components/schemas/ShippingAddress"
              billing_address:
                $ref: "#/components/schemas/BillingAddress"
    OrderImporter:
      content:
        application/json:
          schema:
            type: object
            required:
              - name
            properties:
              id:
                type: number
                example: 1234567
              order_number:
                type: string
                example: 1001
              status:
                type: string
                # TODO: ステータスの内容は検討
                enum:
                  [
                    "processing",
                    "returned",
                    "refunded",
                    "shipped",
                    "partional_returned",
                    "partional_refunded",
                    "partional_shipped",
                    "canceled",
                    "partional_canceled",
                  ]
                description: "processing: 処理中、returned: 返品済み、refunded: 返金済み、shipped: 発送済み、partional_returned: 一部返品済み、partional_refunded: 一部返金済み、partional_shipped: 一部発送済み、canceled: 一部キャンセル済み、"
              total_amount:
                type: number
              total_product_amount:
                type: number
              total_discount_amount:
                type: number
              total_tax_amount:
                type: number
              line_items:
                type: array
                items:
                  $ref: "#/components/schemas/OrderLineItem"
              shipping_address:
                $ref: "#/components/schemas/ShippingAddress"
              billing_address:
                $ref: "#/components/schemas/BillingAddress"
              customer:
                $ref: "#/components/schemas/Customer"
              custom_properties:
                type: object
                properties:
                  customer_buy_times:
                    type: number
              fulfillments:
                type: array
                items:
                  $ref: "#/components/schemas/OrderFulfillment"

  schemas:
    HasNext:
      type: boolean
      description: 他データが存在するかどうか
    NextPageToken:
      type: string
      description: 次データのハッシュ値 次データが存在しない場合にはnullとする
      nullable: true
    Orders:
      type: array
      items:
        $ref: "#/components/schemas/Order"
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        created_at:
          type: string
          example: "2023-05-10T12:00:00+09:00"
        order_number:
          type: string
        status:
          type: string
          # TODO: ステータスの内容は検討
          enum:
            [
              "processing",
              "returned",
              "refunded",
              "shipped",
              "partional_returned",
              "partional_refunded",
              "partional_shipped",
              "canceled",
              "partional_canceled",
            ]
          description: "processing: 処理中、returned: 返品済み、refunded: 返金済み、shipped: 発送済み、partional_returned: 一部返品済み、partional_refunded: 一部返金済み、partional_shipped: 一部発送済み、canceled: 一部キャンセル済み、"
        total_amount:
          type: number
        total_product_amount:
          type: number
        total_discount_amount:
          type: number
        total_tax_amount:
          type: number
        line_items:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItem"
        shipping_address:
          $ref: "#/components/schemas/ShippingAddress"
        billing_address:
          $ref: "#/components/schemas/BillingAddress"
    OrderLineItem:
      type: object
      properties:
        product_id:
          type: string
        sku:
          type: string
        item_image:
          type: string
        total_amount:
          type: number
        product_amount:
          type: number
        discount_amount:
          type: number
        tax_amount:
          type: number
        query:
          type: number
        fulfillment_status:
          type: string
          enum: ["null", "fulfilled", "partial", "not_eligible"]
          description: "null: 未発送、fulfilled: 発送済み, partial: 一部発送済み, not_eligible: 発送対象外"
        variant_options:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItemOption"
        tags:
          type: array
          items:
            type: string
    OrderLineItemOption:
      type: object
      properties:
        name:
          type: string
          description: "オプション名"
          example: "カラー"
        value:
          type: string
          description: "オプションに設定されている値"
          example: "レッド"
      description: "商品に設定されているオプション"

    Address:
      type: object
      properties:
        country:
          type: string
        postal_code:
          type: string
        province:
          type: string
        city:
          type: string
        street1:
          type: string
        street2:
          type: string
    ShippingAddress:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        full_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        address:
          $ref: "#/components/schemas/Address"
    BillingAddress:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        full_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        address:
          $ref: "#/components/schemas/Address"
    Products:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    Product:
      type: object
      properties:
        product_id:
          type: string
          example: 1
        product_name:
          type: string
          example: "テスト商品"
        image_url:
          type: string
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"
        variants:
          type: array
          items:
            $ref: "#/components/schemas/Variant"
    Variants:
      type: array
      items:
        $ref: "#/components/schemas/Variant"
    Variant:
      type: object
      required:
        - "quantity_in_stock"
      properties:
        sku:
          type: string
          example: test-product
        image_url:
          type: string
        name:
          type: string
          example: "テスト商品"
        quantity_in_stock:
          type: integer
          format: int64
          description: "利用可能な在庫数"
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"
        options:
          type: array
          items:
            $ref: "#/components/schemas/OrderLineItemOption"
    Customer:
      type: object
      required:
        - email
          full_name
      properties:
        email:
          type: string
        last_name:
          type: string
          nullable: true
        first_name:
          type: string
          nullable: true
        full_name:
          type: string
    Created_at:
      type: string
      example: "2023-05-10T12:00:00+09:00"
    Updated_at:
      type: string
      example: "2023-05-12T10:30:00+09:00"
    OrderFulfillment:
      type: object
      properties:
        id:
          type: integer
        status:
          type: string
          enum: ["processing", "success", "failure"]
          description: "processing: 処理中、success: 処理成功、failure: 処理失敗"
        tracking_company:
          type: string
        tracking_number:
          type: integer
          example: 1234567
        fulfillment_line_items:
          type: array
          items:
            $ref: "#/components/schemas/FulfillmentLineItems"
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"
    FulfillmentLineItems:
      type: object
      properties:
        id:
          type: integer
        order_line_item_id:
          type: integer
          description: 配送された商品のline_item_id
        units:
          type: integer
          description: 配送済みの商品数
    OrderTransaction:
      type: object
      properties:
        id:
          type: integer
        amount:
          type: number
        currency:
          type: string
          example: "JPY"
        status:
          type: string
          enum: ["success", "failure", "pending"]
          description: "success: 成功、failure: 失敗、pending: 保留"
        type:
          type: string
        gateway:
          type: string
        created_at:
          $ref: "#/components/schemas/Created_at"
        updated_at:
          $ref: "#/components/schemas/Updated_at"

    PostRequestSuccessResponse:
      type: object
      properties:
        results:
          type: string
          example: "success"
    PostRequest400Response:
      type: object
      properties:
        message:
          type: string
          example: "Bad Request"
          description: "エラー詳細が格納されます"
    PostRequest401Response:
      type: object
      properties:
        message:
          type: string
          example: "Unauthorized"
          description: "エラー詳細が格納されます"
    PostRequest422Response:
      type: object
      properties:
        message:
          type: string
          example: "Unprocessable Entity"
          description: "エラー詳細が格納されます"
    PostRequest500Response:
      type: object
      properties:
        message:
          type: string
          example: "Internal Server Error"
          description: "エラー詳細が格納されます(Recustomerにエラーが発生している可能性がございます。お手数ですがお問合せください)"
